{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "alpaadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CAV_Sales_Hist')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CAV_Orders_Hist",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "INV2018.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE MRR_CAV_Orders_Hist",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שנה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AGENTCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מספר סוכן",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COIN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COIN",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COINRATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COINRATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מספר לקוח",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "תאריך חשבונית",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVPREPARDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVPREPARDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DAYELETCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DAYELETCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TALPANCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TALPANCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISCOUNTPERCENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISCOUNTPERCENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROSS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TOTALDUESUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOTALDUESUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALEDISCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SALEDISCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VAT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STORE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STORE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AGENTCODETB",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סוכן",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DAYELETCODETB",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DAYELETCODETB",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TALPANCODETB",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TALPANCODETB",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALEDISCOUNTSSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SALEDISCOUNTSSUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVSDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVSDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COORDINV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מספר חשבונית",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DIARYORDERNUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "פקודת יומן",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DIARYORDERDAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DIARYORDERDAT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATCLS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DATCLS",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_CAV_Orders_Hist"
								}
							}
						]
					},
					{
						"name": "CAV_Sales_Hist",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "INVLN2018.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE MRR_CAV_Sales_Hist",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שנה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVLINE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שורה בחשבונית",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CASES",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CASES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FACTOR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "גורם אירוז",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSSPRC1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROSSPRC1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSSSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סה\"כ לפני הנחה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEMCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "פריט",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINENET",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סה\"כ נטו",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINESALEDISCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סה\"כ הנחה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SINGELQUN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "כמות",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSSPRC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מחיר ליח' לפני הנחה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVPREPARDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "תאריך אספקה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HAN2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HAN2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HAN3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HAN3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANADDCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANADDCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANADDPRECENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANADDPRECENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANMIVZACODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANMIVZACODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANMIVZAPERCENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANMIVZAPERCENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANREGULARCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANREGULARCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANREGULARPERCENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANREGULARPERCENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINEEXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINEEXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINESALEDISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINESALEDISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINETRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINETRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESONCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RESONCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BONGROUP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BONGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BONVAL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BONVAL",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_CAV_Sales_Hist"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Sales/CAV_Hist"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-27T12:53:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CAV_Targets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CAV_Targets",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DROP TABLE  MRR_CAV_Targets",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_Targets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_CAV_Targets"
								}
							}
						]
					},
					{
						"name": "sp_CAV_Targets",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CAV_Targets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_CAV_Targets]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Targets/CAV"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-27T13:13:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_DWH_DimCustomers",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_CAV_Customer",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_CAV_Customers_Details",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_CAV_Customers_Migzar",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_Prio_Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_DimCustomers]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_CAV_Customer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(24,'Hour')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCSVKCST.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [mrr_cav_customers]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AGENTCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AGENTCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 9
										}
									},
									{
										"source": {
											"name": "AREACODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AREACODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "COMPANY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COMPANY",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "CREDITCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CREDITCODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CUSTOMER",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DISCOUNTCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISCOUNTCODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DISTREBUTIONCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISTREBUTIONCODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FAX",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FAX",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GIVUNCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GIVUNCODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "INVFIXDAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVFIXDAT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "ISVAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ISVAT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KESHERPERSON",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KESHERPERSON",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KESHERPERSONTEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KESHERPERSONTEL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MINQUN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MINQUN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MOBILEPHONE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MOBILEPHONE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PRICECODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PRICECODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 15
										}
									},
									{
										"source": {
											"name": "RESHETCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RESHETCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "SALESWOMEN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SALESWOMEN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SECTORCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SECTORCODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SHIPPINGCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SHIPPINGCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 9
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STREET",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STREET",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SUMDISCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SUMDISCOUNT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOWN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOWN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TRADEDISCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRADEDISCOUNT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KH",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 9
										}
									},
									{
										"source": {
											"name": "BRANCH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BRANCH",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PAYACCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PAYACCOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 21
										}
									},
									{
										"source": {
											"name": "HBRCZ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HBRCZ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OSEKM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSEKM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TLP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TLP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HIG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HIG",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HIGNAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HIGNAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RESHETNAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RESHETNAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_CAV_Customers_Details",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(24,'Hour')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCACCIND.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [mrr_cav_customersdetails]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COMPANY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COMPANY",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "ACCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CURRENCY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ENAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ENAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TOWN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOWN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FAX",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FAX",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ADDRESS",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 21
										}
									},
									{
										"source": {
											"name": "NAME1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NAME1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IN1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IN1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INVAL1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVAL1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IN2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IN2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INVAL2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVAL2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IN3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IN3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INVAL3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVAL3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IN4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IN4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "INVAL4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVAL4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ASH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ASH",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ASHD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ASHD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ARV1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARV1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ARV2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARV2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ARVN1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARVN1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ARVN2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARVN2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ARVN3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARVN3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ARVN4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARVN4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KMAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KMAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KMAMD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KMAMD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OSK",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OSK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MAMID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MAMID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MAMIDD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MAMIDD",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KYZR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KYZR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NAV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NAV",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SHS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SHS",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "SHT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SHT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "DATOPEN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DATOPEN",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CITY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STRNM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STRNM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "POB",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "POB",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ZIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZIP",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 21
										}
									},
									{
										"source": {
											"name": "TEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TEL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CNT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CTEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CTEL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CELL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CELL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "URL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "URL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CRM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CRM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MKV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MKV",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PGDAY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PGDAY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PGAHZ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PGAHZ",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DAYG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DAYG",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MSY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MSY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TMM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TMM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TMS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TMS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KPS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "KPS",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SHAM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SHAM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TASH",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TASH",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BNK",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BNK",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SNF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SNF",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BACT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BACT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Customers_Dtails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_CAV_Customers_Migzar",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table mrr_cav_customersmigzar",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CUSTOMER",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "מגזר",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מגזר",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_dim",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "ASCSVKCST.CSV"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_CAV_CustomersMigzar"
								}
							}
						]
					},
					{
						"name": "Copy_Prio_Customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\n\n\nselect \n'1' as 'EntityID'\n,CAST('1' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.CUST))as varchar) AS 'AccountKey'\n,c.CUSTNAME as 'מספר לקוח'\n,c.CUSTNAME + ' | ' +case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'מזהה לקוח'\n,case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'שם לקוח'\n\n----Enable This Part for Parent and Child Customers method\n\n--,c2.CUSTNAME as 'מספר לקוח אב'\n--,c2.CUSTNAME + ' | ' +case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'מזהה לקוח אב'\n--,case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'שם לקוח אב'\n--,Case when c2.CUSTDES='' then c.CUSTDES else case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end end as 'לקוחות' -- this fiels enable to contain all regular customers and all Fathers in the sam column\n\n,ct.CTYPECODE as 'קוד קטגורייה'\n,system.dbo.tabula_hebconvert(ct.CTYPENAME) as 'קטגוריית לקוח' \n,cs.SPEC1 AS 'פרמטר 1'\n,cs.SPEC2 AS 'פרמטר 2'\n,cs.SPEC3 AS 'פרמטר 3'\n,cs.SPEC4 AS 'פרמטר 4'\n,cs.SPEC5 AS 'פרמטר 5'\n,cs.SPEC6 AS 'פרמטר 6'\n,cs.SPEC7 AS 'פרמטר 7'\n,cs.SPEC8 AS 'פרמטר 8'\n,c.[STATE] AS 'עיר'\n,c.ADDRESS AS 'כתובת'\n,c.PHONE AS 'מספר טלפון'\n,cst.STATDES AS 'סטטוס לקוח'\n,CAST('1' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.AGENT))as varchar) AS 'AgentKey'\n,null as 'תנאי תשלום ללקוח'\n,null AS 'MAXOBLIGO'\n,null as 'MAXCREDIT'\n,null as 'אובליגו'\n,null as 'OBLIGO Balance' --יתרת אובליגו\t\t\n,null 'IsClubMember' --need to change according to your cust\n,null as 'מגדר' --need to change according to your cust\n,null as 'גיל' --need to change according to your cust\n,null as 'תאריך יום הולדת' --need to change according to your cust\n,null as 'תאריך הצטרפות'\n,null as 'תאריך תוקף מועדון' --need to change according to your cust\n,null as 'שיוך למועדון לקוחות' --need to change according to your cust\n,null as 'אישור מייל' --need to change according to your cust\n,null as 'אישור SMS' --need to change according to your cust\n,case when Month(getdate())= MoNTH(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0))) \n then 'חודש נוכחי' else FORMAT(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0)),'MMMM')\n END as 'חודש יום הולדת' --need to change according to your cust\n,c.BRANCH as 'JoinBranchID' --need to change according to your cust\n\n,GETDATE() AS 'RowInsertDatetime'\n\n\nfrom [desig].[dbo].CUSTOMERS c\nLeft join [desig].[dbo].CTYPE ct  on c.CTYPE=ct.CTYPE\nLeft join [desig].[dbo].CUSTSPEC cs on cs.CUST=c.CUST\nLeft join [desig].[dbo].[COUNTRIES] on [COUNTRIES].COUNTRY=c.COUNTRY\nleft join [desig].[dbo].CUSTOMERS c2 on c.MCUST=c2.CUST ----Enable This Part for Parent and Child Customers method\nleft join [desig].[dbo].CUSTSTATS cst on c.CUSTSTAT=cst.CUSTSTAT\n\nwhere\nexists\n(\nSELECT null FROM [desig].[dbo].INVOICES i\nwhere i.CUST=c.CUST\n)\nor  exists\n(\nSELECT null  FROM [desig].[dbo].DOCUMENTS d\nwhere d.CUST=c.CUST\n)\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\n\n\nselect \n\t    '2' as 'EntityID'\n,CAST('2' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.CUST))as varchar) AS 'AccountKey'\n,c.CUSTNAME as 'מספר לקוח'\n,c.CUSTNAME + ' | ' +case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'מזהה לקוח'\n,case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'שם לקוח'\n\n----Enable This Part for Parent and Child Customers method\n\n--,c2.CUSTNAME as 'מספר לקוח אב'\n--,c2.CUSTNAME + ' | ' +case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'מזהה לקוח אב'\n--,case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'שם לקוח אב'\n--,Case when c2.CUSTDES='' then c.CUSTDES else case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end end as 'לקוחות' -- this fiels enable to contain all regular customers and all Fathers in the sam column\n\n,ct.CTYPECODE as 'קוד קטגורייה'\n,system.dbo.tabula_hebconvert(ct.CTYPENAME) as 'קטגוריית לקוח' \n,cs.SPEC1 AS 'פרמטר 1'\n,cs.SPEC2 AS 'פרמטר 2'\n,cs.SPEC3 AS 'פרמטר 3'\n,cs.SPEC4 AS 'פרמטר 4'\n,cs.SPEC5 AS 'פרמטר 5'\n,cs.SPEC6 AS 'פרמטר 6'\n,cs.SPEC7 AS 'פרמטר 7'\n,cs.SPEC8 AS 'פרמטר 8'\n,c.[STATE] AS 'עיר'\n,c.ADDRESS AS 'כתובת'\n,c.PHONE AS 'מספר טלפון'\n,cst.STATDES AS 'סטטוס לקוח'\n,CAST('2' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.AGENT))as varchar) AS 'AgentKey'\n,null as 'תנאי תשלום ללקוח'\n,null AS 'MAXOBLIGO'\n,null as 'MAXCREDIT'\n,null as 'אובליגו'\n,null as 'OBLIGO Balance' --יתרת אובליגו\t\t\n,null 'IsClubMember' --need to change according to your cust\n,null as 'מגדר' --need to change according to your cust\n,null as 'גיל' --need to change according to your cust\n,null as 'תאריך יום הולדת' --need to change according to your cust\n,null as 'תאריך הצטרפות'\n,null as 'תאריך תוקף מועדון' --need to change according to your cust\n,null as 'שיוך למועדון לקוחות' --need to change according to your cust\n,null as 'אישור מייל' --need to change according to your cust\n,null as 'אישור SMS' --need to change according to your cust\n,case when Month(getdate())= MoNTH(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0))) \n then 'חודש נוכחי' else FORMAT(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0)),'MMMM')\n END as 'חודש יום הולדת' --need to change according to your cust\n,c.BRANCH as 'JoinBranchID' --need to change according to your cust\n\n,GETDATE() AS 'RowInsertDatetime'\n\n\nfrom [tous].[dbo].CUSTOMERS c\nLeft join [tous].[dbo].CTYPE ct  on c.CTYPE=ct.CTYPE\nLeft join [tous].[dbo].CUSTSPEC cs on cs.CUST=c.CUST\nLeft join [tous].[dbo].[COUNTRIES] on [COUNTRIES].COUNTRY=c.COUNTRY\nleft join [tous].[dbo].CUSTOMERS c2 on c.MCUST=c2.CUST ----Enable This Part for Parent and Child Customers method\nleft join [tous].[dbo].CUSTSTATS cst on c.CUSTSTAT=cst.CUSTSTAT\n\nwhere\nexists\n(\nSELECT null FROM [tous].[dbo].INVOICES i\nwhere i.CUST=c.CUST\n)\nor  exists\n(\nSELECT null  FROM [tous].[dbo].DOCUMENTS d\nwhere d.CUST=c.CUST\n)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_Prio_Customers]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "מספר לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "מזהה לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מזהה לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "שם לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "קוד קטגורייה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קוד קטגורייה",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "קטגוריית לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קטגוריית לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 6",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 7",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "פרמטר 8",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "עיר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "עיר",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "כתובת",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "כתובת",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "מספר טלפון",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר טלפון",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "סטטוס לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "סטטוס לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "תנאי תשלום ללקוח",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תנאי תשלום ללקוח",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MAXOBLIGO",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MAXOBLIGO",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MAXCREDIT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MAXCREDIT",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "אובליגו",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "אובליגו",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OBLIGO Balance",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OBLIGO Balance",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsClubMember",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IsClubMember",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "מגדר",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "מגדר",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "גיל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "גיל",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "תאריך יום הולדת",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך יום הולדת",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "תאריך הצטרפות",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך הצטרפות",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "תאריך תוקף מועדון",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך תוקף מועדון",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "שיוך למועדון לקוחות",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "שיוך למועדון לקוחות",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "אישור מייל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "אישור מייל",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "אישור SMS",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "אישור SMS",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "חודש יום הולדת",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "חודש יום הולדת",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JoinBranchID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "JoinBranchID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].CUSTOMERS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Customers"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Customers"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-22T07:56:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\n\nSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\nSELECT \n\n'1' as 'EntityID'\n          ,pt.TRANSACTNUM AS 'חשבונית'\n\t\t--,ii.KLINE AS 'InvoiceLineNumber'\n\t\t,'POS' AS 'DocName'\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.CUST)) as varchar)   AS 'AccountKey' \n\n\t\t--choose one of the above , The defauls is uncomment :\n\t\t,CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) AS 'Date' -- Invoice date  -- Date from Invoices in case you need just invoices \n\n\t\t,pt.CURTIME/60 AS 'Time'\n\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.POS_USERBSALE)) as varchar) AS 'AgentKey' -- the sales representor\n\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.PART)) as varchar) AS 'ItemKey'\n\n\n\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.BRANCH)) as varchar) AS 'BranchKey'\n\t--\t,null as 'EmployeeKey'\n\t\t--,pti.CLUB as 'חבר מועדון'\n\n\t\t--,(1 - (1 - ii.[T$PERCENT] / 100) * (1 - i.[T$PERCENT] / 100)) AS 'DiscountPercent' -- the DiscountPercent for the invoice and invoice line\n\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000))/(1+(pti.VATPERCENT/100)),2) AS 'LineTotalDiscount' -- the discount from gross price to the net\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000)),2) as 'LineTotalDiscountVAT'\n\t\t--,ROUND(ii.PRICE, 2) * ii.IEXCHANGE AS 'UnitGrossPrice'\n\t\t,ROUND(pti.PRICE/(1+(pti.VATPERCENT/100)),2) AS 'UnitNetPrice'\n\t\t,pti.PRICE as 'UnitPriceVAT'\n\n\t\t,(pti.QUANT/1000.0) AS 'Quantity'\n\t--\t,null as 'factoryQuantity'\n\t--\t,null AS 'LineTotalCost' \n\t\t,(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100))*(pti.PRICE/(1+(pti.VATPERCENT/100))*(pti.QUANT/1000.0)) AS 'LineTotalNet'\n\t\t--ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000)),2) AS 'LineTotalNet'\n\n\t--    ,null AS 'LineTotalNet_USD'\n\t\t,ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000.0)*(1+(pti.VATPERCENT/100))),2) AS 'LineTotalNetVAT'\n\t--\t,null AS 'LineTotalNetVAT_USD'\n\t\t,CONVERT(INT, LEFT(CONVERT(VARCHAR, CONVERT(DATETIME, (i.IVDATE + 46283040) / 1440.0), 112), 6)) AS YearMonth\n\t\t--,null as 'סטטוס'\n\t\t--,null  as 'ChargeFlag'  \n\t\t--,null as 'סטטוס ליקוט כותרת'\n\t --   ,null  as 'סטטוס ליקוט שורה'\n\t\t--,null  as 'דגל סטורנו'\n\t--\t,GETDATE() AS RowInsertDatetime\n\n\nfrom [desig].[dbo].POS_TRANSACTIONS pt \nleft join  [desig].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\nleft join [desig].[dbo].PART p on p.PART=pti.PART\n--left join [desig].[dbo].Costs cost on cost.CURDATE=pt.CURDATE and cost.ItemID=pti.PART\nleft join [desig].[dbo].INVOICES i on i.IV=pti.IV\n\t\t\t\nWHERE 1=1 \nAND (pt.CURDATE <> 51852960 and CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) = cast (GETDATE() as date))\n--and pti.PART <> ''\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\nSELECT \n\n'2' as 'EntityID'\n          ,pt.TRANSACTNUM AS 'חשבונית'\n\t\t--,ii.KLINE AS 'InvoiceLineNumber'\n\t\t,'POS' AS 'DocName'\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.CUST)) as varchar)   AS 'AccountKey' \n\n\t\t--choose one of the above , The defauls is uncomment :\n\t\t,CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) AS 'Date' -- Invoice date  -- Date from Invoices in case you need just invoices \n\n\t\t,pt.CURTIME/60 AS 'Time'\n\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.POS_USERBSALE)) as varchar) AS 'AgentKey' -- the sales representor\n\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.PART)) as varchar) AS 'ItemKey'\n\n\n\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.BRANCH)) as varchar) AS 'BranchKey'\n\t\t--,null as 'EmployeeKey'\n\t\t--,null as 'חבר מועדון'\n\n\t\t--,(1 - (1 - ii.[T$PERCENT] / 100) * (1 - i.[T$PERCENT] / 100)) AS 'DiscountPercent' -- the DiscountPercent for the invoice and invoice line\n\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000))/(1+(pti.VATPERCENT/100)),2) AS 'LineTotalDiscount' -- the discount from gross price to the net\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000)),2) as 'LineTotalDiscountVAT'\n\t\t--,ROUND(ii.PRICE, 2) * ii.IEXCHANGE AS 'UnitGrossPrice'\n\t\t,ROUND(pti.PRICE/(1+(pti.VATPERCENT/100)),2) AS 'UnitNetPrice'\n\t\t,pti.PRICE as 'UnitPriceVAT'\n\n\t\t,(pti.QUANT/1000.0) AS 'Quantity'\n\t\t--,null as 'factoryQuantity'\n\t\t--,null AS 'LineTotalCost' \n\t\t,(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100))*(pti.PRICE/(1+(pti.VATPERCENT/100))*(pti.QUANT/1000.0)) AS 'LineTotalNet'\n\t\t--ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000)),2) AS 'LineTotalNet'\n\n\t  --  ,null AS 'LineTotalNet_USD'\n\t\t,ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000.0)*(1+(pti.VATPERCENT/100))),2) AS 'LineTotalNetVAT'\n\t\t--,null AS 'LineTotalNetVAT_USD'\n\t\t,CONVERT(INT, LEFT(CONVERT(VARCHAR, CONVERT(DATETIME, (i.IVDATE + 46283040) / 1440.0), 112), 6)) AS YearMonth\n\t\t--,null as 'סטטוס'\n\t\t--,null  as 'ChargeFlag'  \n\t\t--,null as 'סטטוס ליקוט כותרת'\n\t   -- ,null  as 'סטטוס ליקוט שורה'\n\t\t--,null  as 'דגל סטורנו'\n\t\t--,GETDATE() AS RowInsertDatetime\n\n\n\nfrom [tous].[dbo].POS_TRANSACTIONS pt \nleft join  [tous].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\nleft join [tous].[dbo].PART p on p.PART=pti.PART\n--left join [tous].[dbo].Costs cost on cost.CURDATE=pt.CURDATE and cost.ItemID=pti.PART\nleft join [tous].[dbo].INVOICES i on i.IV=pti.IV\n\t\t\t\nWHERE 1=1 \nAND CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) = cast (GETDATE() as date)\n--and pti.PART <> ''",
								"queryTimeout": "00:30:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table \nDWH_Daily_Sales",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "חשבונית",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TRANSACTNUM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DocName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DocName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Time",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LineTotalDiscount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalDiscount",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LineTotalDiscountVAT",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalDiscountVAT",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "UnitNetPrice",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UnitNetPrice",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "UnitPriceVAT",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UnitPriceVAT",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LineTotalNet",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalNet",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "LineTotalNetVAT",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalNetVAT",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "YearMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "YearMonth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": false,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].POS_TRANSACTIONS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Daily Run"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-14T15:06:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Eroz Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_DWH_FactEroz",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_WMS_Eroz",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_Fact_Eroz]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_WMS_Eroz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\n\t   DISTINCT([AUDITID])\n      ,AU.[USERID] AS 'משתמש'\n      ,AU.[ACTIVITYDATE] AS 'זמן הפעולה'\n\t  ,cast(AU.[ACTIVITYDATE] as date) AS 'Date'\n      ,AU.[DOCUMENT] AS 'שם מסמך'\n      ,AU.[DOCUMENTLINE] AS 'שורת מסמך'\n      ,AU.[FROMLOAD] AS 'מטעינה'\n      ,AU.[TOLOAD] AS 'לטעינה'\n      ,AU.[FROMLOC] AS 'ממיקום'\n      ,AU.[TOLOC] AS 'למיקום'\n      ,AU.[FROMQTY] AS 'מכמות'\n      ,AU.[TOCONTAINER] AS 'לקונטיינר'\n\t  ,VS.[SKU] AS 'מספר פריט'\n\t  ,VS.[SKUDESC] AS 'תאור פריט'\n\t  ,OL.ORDERID AS 'מספר הזמנה'\n      ,AU.[TOQTY] AS 'לכמות'\n\t  ,VS.each_in_case -- CHECK IF NULL FOR 1 \n\t  ,ISNULL(VS.each_in_case,1.00)\t\tAS 'גורם אירוז'\n\t  ,FLOOR(AU.TOQTY / ISNULL(VS.each_in_case,1.00) ) AS 'כמות ארגזים'\n\t  ,AU.TOQTY - (ISNULL(VS.each_in_case,1.00) * FLOOR(AU.TOQTY/ ISNULL(VS.each_in_case,1.00) )) AS 'כמות יחידות'\n\nFROM [SCEXPERT].[dbo].[vsku] VS\nLEFT JOIN [SCEXPERT].[dbo].[AUDIT] AU\tON VS.SKU = AU.SKU \nLEFT JOIN [dbo].[ORDERLOADS] OL\t\t\tON OL.PICKLIST = AU.DOCUMENT\nLEFT JOIN [dbo].[SKUUOM] SKUU\t\t\tON SKUU.SKU = VS.SKU\n\nWHERE AU.CONSIGNEE = 'JV'\nAND AU.ACTIVITYTYPE = 'PICKLOAD'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AUDITID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AUDITID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "משתמש",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "משתמש",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "זמן הפעולה",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "זמן הפעולה",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "שם מסמך",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם מסמך",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שורת מסמך",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "שורת מסמך",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "מטעינה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מטעינה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "לטעינה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "לטעינה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ממיקום",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ממיקום",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "למיקום",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "למיקום",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מכמות",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										},
										"sink": {
											"name": "מכמות",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "לקונטיינר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "לקונטיינר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מספר פריט",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר פריט",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "תאור פריט",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "תאור פריט",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מספר הזמנה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר הזמנה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "לכמות",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										},
										"sink": {
											"name": "לכמות",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "each_in_case",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "each_in_case",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "גורם אירוז",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "גורם אירוז",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "כמות ארגזים",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 29
										},
										"sink": {
											"name": "כמות ארגזים",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "כמות יחידות",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 38
										},
										"sink": {
											"name": "כמות יחידות",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WMS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_WMS_Eroz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Eroz"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-22T09:33:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_DWH_FactInventory",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_Prio_Inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_Fact_Inventory]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_Prio_Inventory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\t\n\n\nselect \n'1' as 'EntityID'\n--,'1' + Inv.ItemKey as 'ItemKey'\n--,CONCAT('1', Inv.ItemKey) as 'ItemKey'\n,cast('1' as varchar) + cast(Inv.ItemKey as varchar) as 'ItemKey'\n,cast(Inv.[Date] as date) as 'Date'\n,Inv.[TYPE] as 'Type'\n,Inv.[Status] as 'סטטוס'\n--,'1' + Inv.[WarehsKey] as 'WarehsKey'\n--,CONCAT('1' , Inv.[WarehsKey]) as 'WarehsKey'\n,CAST('1' as varchar) + cast( Inv.[WarehsKey] as varchar) as 'WarehsKey'\n--,'1' + Inv.[BranchKey] as 'BranchKey'\n--,Concat('1', Inv.[BranchKey]) as 'BranchKey'\n,CAST('1' as varchar) + cast(Inv.[BranchKey] as varchar) as 'BranchKey'\n,Inv.[CostperUnit]\n,SUM(Quantity) as 'Quantity'\n,SUM([Stock Value]) as 'StockValue'\n\n\n,Inv.[RowInsertDatetime]\nFROM\n(\n\t\t SELECT \n\t\tCONVERT(INT, CONVERT(VARCHAR, wb.PART)) AS 'ItemKey'\n\t\t,convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0) AS 'Date'\n\t\t,ws.[TYPE] \t\n\t\t,c.CUSTNAME AS 'Status'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, wb.WARHS)) AS 'WarehsKey'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, ws.POS_BRANCH)) AS 'BranchKey' -- Only Retail with POS\n\t\t--,CONVERT(INT, CONVERT(VARCHAR, b.BRANCH)) AS 'BranchKey' -- Only Retail without POS\n\t\t,p.COST as 'CostperUnit'\n\t\t,(wb.BALANCE) / 1000.0 AS 'Quantity' \n\t\t,(wb.BALANCE) / 1000.0 * (p.COST) as 'Stock Value'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\t\t--,wt.WARHSTYPENAME -- Only QA \n\t\t-- ,p.PARTNAME -- Only QA  \n\t\t--,ws.WARHSNAME -- Only QA\n\t\t--,w.WARHSDES  -- Only QA\n       FROM [desig].[dbo].WARHSBAL wb \n       Left join  [desig].[dbo].WAREHOUSES ws ON ws.WARHS = wb.WARHS \n       Left join  [desig].[dbo].CUSTOMERS c ON c.CUST = wb.CUST   \n       Left join  [desig].[dbo].PART p on wb.PART=p.PART \n\t   Left join  [desig].[dbo].BRANCHES b ON b.WARHS = wb.WARHS -- Only Retail without POS\n\t  -- left join [dbo].WARHSTYPE wt on wt.WARHSTYPE=w.WARHSTYPE -- Only QA\nWHERE  1 = 1\nand year(convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)) >= 2018\n       --and ws.WARHSNAME in ('Main', 'SV')  --QA Filter\n\t   --and p.PARTNAME='LL-1C' --QA Filter\n\t   --and convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)>='01/01/2016' --QA Filter\n)Inv\nGROUP BY\nInv.ItemKey\n,Inv.Date\n,Inv.TYPE\n,Inv.Status\n,Inv.WarehsKey\n,Inv.BranchKey\n,Inv.CostperUnit\n,Inv.RowInsertDatetime\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\nselect \n'2' as 'EntityID'\n--,'1' + Inv.ItemKey as 'ItemKey'\n--,CONCAT('1', Inv.ItemKey) as 'ItemKey'\n,cast('2' as varchar) + cast(Inv.ItemKey as varchar) as 'ItemKey'\n,cast(Inv.[Date] as date) as 'Date'\n,Inv.[TYPE] as 'Type'\n,Inv.[Status] as 'סטטוס'\n,CAST('2' as varchar) + cast( Inv.[WarehsKey] as varchar) as 'WarehsKey'\n,CAST('2' as varchar) + cast(Inv.[BranchKey] as varchar) as 'BranchKey'\n,Inv.[CostperUnit]\n,SUM(Quantity) as 'Quantity'\n,SUM([Stock Value]) as 'StockValue'\n\n\n,Inv.[RowInsertDatetime]\nFROM\n(\n\t\t SELECT \n\t\tCONVERT(INT, CONVERT(VARCHAR, wb.PART)) AS 'ItemKey'\n\t\t,convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0) AS 'Date'\n\t\t,ws.[TYPE] \t\n\t\t,c.CUSTNAME AS 'Status'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, wb.WARHS)) AS 'WarehsKey'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, ws.POS_BRANCH)) AS 'BranchKey' -- Only Retail with POS\n\t\t--,CONVERT(INT, CONVERT(VARCHAR, b.BRANCH)) AS 'BranchKey' -- Only Retail without POS\n\t\t,p.COST as 'CostperUnit'\n\t\t,(wb.BALANCE) / 1000.0 AS 'Quantity' \n\t\t,(wb.BALANCE) / 1000.0 * (p.COST) as 'Stock Value'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\t\t--,wt.WARHSTYPENAME -- Only QA \n\t\t-- ,p.PARTNAME -- Only QA  \n\t\t--,ws.WARHSNAME -- Only QA\n\t\t--,w.WARHSDES  -- Only QA\n       FROM [tous].[dbo].WARHSBAL wb \n       Left join  [tous].[dbo].WAREHOUSES ws ON ws.WARHS = wb.WARHS \n       Left join  [tous].[dbo].CUSTOMERS c ON c.CUST = wb.CUST   \n       Left join  [tous].[dbo].PART p on wb.PART=p.PART \n\t   Left join  [tous].[dbo].BRANCHES b ON b.WARHS = wb.WARHS -- Only Retail without POS\n\t  -- left join [dbo].WARHSTYPE wt on wt.WARHSTYPE=w.WARHSTYPE -- Only QA\nWHERE  1 = 1\nand year(convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)) >= 2018\n       --and ws.WARHSNAME in ('Main', 'SV')  --QA Filter\n\t   --and p.PARTNAME='LL-1C' --QA Filter\n\t   --and convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)>='01/01/2016' --QA Filter\n)Inv\nGROUP BY\nInv.ItemKey\n,Inv.Date\n,Inv.TYPE\n,Inv.Status\n,Inv.WarehsKey\n,Inv.BranchKey\n,Inv.CostperUnit\n,Inv.RowInsertDatetime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_Prio_Inventory",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "סטטוס",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "סטטוס",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WarehsKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WarehsKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CostperUnit",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "CostperUnit",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "StockValue",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "StockValue",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].PART"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Inventory"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Inventory"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-22T10:51:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory_ReturnDestroy Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_Inventory_ReturnDestroy Main Run",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_CAV_Inventory_ReturnDestroy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_Inventory_ReturnDestroy]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_CAV_Inventory_ReturnDestroy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(24,'Hour')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCMLIITR.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_CAV_Inventory_ReturnDestroy]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MRX",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRX",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "ITM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "STOR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STOR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 9
										}
									},
									{
										"source": {
											"name": "ITUR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITUR",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "QUN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QUN",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "MLIDAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MLIDAT",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Inventory_ReturnDestroy",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Inventory Return\\Destroy"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-22T10:51:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Items Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_STG_CAV_Items",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_STG_CAV_Items_Customer_PriceList",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "sp_STG_CAV_Items_Supplier_PriceList",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_CAV_Items",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_CAV_Items_Brand",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_CAV_Items_Category_Mapping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_STG_CAV_Items]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_DWH_Dim_Items",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_STG_CAV_Items",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_Prio_Items",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_DimItems]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_STG_CAV_Items_Customer_PriceList",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_CAV_PriceList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_STG_CAV_Items_Customer_PriceList]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_STG_CAV_Items_Supplier_PriceList",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_CAV_PriceList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_STG_CAV_Items_Supplier_PriceList]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_CAV_PriceList",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(24,'Hour')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCSVKPRICEITEM.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_CAV_Items_PriceList]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MR",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ITEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PRCCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PRCCODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PRCDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PRCDATE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PRICE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PRICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 30
										}
									},
									{
										"source": {
											"name": "RECPRICE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RECPRICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 27
										}
									},
									{
										"source": {
											"name": "CURRENCY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CURRENCY",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MDATE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_PriceList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_CAV_Items",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(24,'Hour')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCMLIITEMS.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_CAV_Items]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ISVATFREE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ISVATFREE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FATHERITEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FATHERITEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BARCODEMLI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BARCODEMLI",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEMENAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEMENAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEMNAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEMNAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEMTYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEMTYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEMUNIT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITEMUNIT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ISKUPON",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ISKUPON",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRICE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PRICE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BRUTOWEIGHT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BRUTOWEIGHT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NETOWEIGHTFORUNIT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NETOWEIGHTFORUNIT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SHORTCODEMLI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SHORTCODEMLI",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SHORTCODESVK",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SHORTCODESVK",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SHORTNAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SHORTNAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNITSINPALLETS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UNITSINPALLETS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNITSINWHOLE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UNITSINWHOLE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VENDOR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VENDOR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VOLUMEFORWHOLE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VOLUMEFORWHOLE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BARCODESVK",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BARCODESVK",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITUR1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITUR1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HFL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HFL",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Items",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_CAV_Items_Brand",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "s"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_CAV_Items_Brands]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_dim",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "ASCSVKGROUP.CSV"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Items_Brands",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_CAV_Items_Category_Mapping",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(24,'Hour')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCMLIIFUN.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_CAV_Items_Category_Mapping]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MRX",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MRX",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ITM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "IFUN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IFUN",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "IFUNNM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IFUNNM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VAL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VALNM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VALNM",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Items_Category_Mapping",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_Prio_Items",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\nselect DISTINCT \n\t'1' as 'EntityID'\n\t\t,CAST('1' as varchar) +CAST( CONVERT(BIGINT, CONVERT(VARCHAR, p.PART)) as varchar) AS 'ItemKey'\n\t\t,p.PARTNAME AS 'מקט'\n\t\t--,p.PARTDES AS 'שם מוצר'\n\t\t,system.dbo.tabula_hebconvert(p.PARTDES) AS 'שם מוצר'\n\t\t--,p.PARTNAME + ' | ' + p.PARTDES AS 'מזהה מוצר'\n\t\t,p.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p.PARTDES) AS 'מזהה מוצר'\n\n\t\t,p2.PARTNAME AS 'מקט מרכז'\n\t\t,system.dbo.tabula_hebconvert(p2.PARTDES) AS 'שם מוצר מרכז'\n\t\t,p2.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p2.PARTDES) AS 'מזהה מוצר מרכז'\n\n\t\t,f.FAMILYNAME AS 'קוד קטגוריה' -- Product Category Code\n\t\t,system.dbo.tabula_hebconvert(f.FAMILYDES) AS 'קטגוריה' -- Product Category Name\n\t\t,system.dbo.tabula_hebconvert(ft.FTNAME) AS 'משפחה'\n\t\t----2.2\n\t\t--,ps.STATDES AS 'סטטוס'\n\t\t,ps.SPEC1 AS 'פרמטר 1'\n\t\t,ps.SPECDES1 AS 'שם פרמטר 1' ----Choose your Client preffer specdes number\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'פרמטר 2'\n\t\t,ps.SPECDES2 AS 'שם פרמטר 2' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 3' ------ SIZE\n\t\t,ps.SPECDES3 AS 'שם פרמטר 3' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 4'\n\t\t,ps.SPECDES3 AS 'שם פרמטר 4' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC4 AS 'פרמטר 5'\n\t\t,ps.SPECDES4 AS 'שם פרמטר 5' ----Choose your Client preffer specdes number\n\t\t,null AS 'פרמטר 12'\n\t    ,ps.SPEC15 AS 'פרמטר 15'\n\t\t,system.dbo.tabula_hebconvert(SPECDES15) AS 'שם פרמטר 15' \n\t\t,p.COST AS 'עלות'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC6) AS 'מותג'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC8) AS 'מגדר'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'צבע'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC11) AS 'עונה'\n        ,system.dbo.tabula_hebconvert(ps.SPEC17) AS 'קולקציה'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC10) AS 'גזרה'\n\t\t,NULL AS 'InventoryItem' -- if the item has inventory in warhouses , from master food\n\t\t,null AS 'גיל מלאי'\n\t\t,null AS 'מיון מלאי'\n\t\t,null AS 'תאריך כניסה אחרון למלאי'\n\t\t,NULL AS 'סוג ייבוא' -- if coming from local or imported \n\t\t,NULL AS 'יחידות מכירה' -- from UNIT Table \n\t\t,NULL AS 'גודל'\n\t\t,NULL AS 'משקל'\n\t\t,null as 'מנוהל מלאי'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\n\nfrom [desig].[dbo].PART p \n\tleft join [desig].[dbo].FAMILY f on p.FAMILY=f.FAMILY\n\tleft join [desig].[dbo].FAMILYTYPES ft on f.FAMILYTYPE=ft.FAMILYTYPE\n\tleft join [desig].[dbo].PARTSPEC ps on p.PART=ps.PART\n\tleft join [desig].[dbo].PART p2 on p.MPART=p2.PART\n\tinner join (\n\tselect\n\tpti.PART\n\t,max(convert(smalldatetime, (pt.CURDATE + pt.CURTIME + 46283040) / 1440.0)) as 'DateTime'\n\tfrom [desig].[dbo].POS_TRANSACTIONS pt\n\tleft join [desig].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\n\twhere 1=1\n\tand (pt.CURDATE <> 51852960 and convert(smalldatetime, (pt.CURDATE + 46283040) / 1440.0) >= DATEADD(Year,-3,DATEADD(yy, DATEDIFF(yy, 0, GETDATE()), 0)))\n\tand pti.IPRICEADISCOUNTBVAT<>0\n\tgroup by pti.PART\n\t) pti on pti.PART=p.PART\n\n\twhere 1=1\n\n\t\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\nselect DISTINCT \n\t'2' as 'EntityID'\n\t\t,CAST('2' as varchar) +CAST( CONVERT(BIGINT, CONVERT(VARCHAR, p.PART)) as varchar) AS 'ItemKey'\n\t\t,p.PARTNAME AS 'מקט'\n\t\t--,p.PARTDES AS 'שם מוצר'\n\t\t,system.dbo.tabula_hebconvert(p.PARTDES) AS 'שם מוצר'\n\t\t--,p.PARTNAME + ' | ' + p.PARTDES AS 'מזהה מוצר'\n\t\t,p.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p.PARTDES) AS 'מזהה מוצר'\n\n\t\t,p2.PARTNAME AS 'מקט מרכז'\n\t\t,system.dbo.tabula_hebconvert(p2.PARTDES) AS 'שם מוצר מרכז'\n\t\t,p2.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p2.PARTDES) AS 'מזהה מוצר מרכז'\n\n\t\t,f.FAMILYNAME AS 'קוד קטגוריה' -- Product Category Code\n\t\t,system.dbo.tabula_hebconvert(f.FAMILYDES) AS 'קטגוריה' -- Product Category Name\n\n\t\t--,ft.FTNAME AS 'משפחה'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC11) AS 'משפחה'\n\t\t----2.2\n\t\t--,ps.STATDES AS 'סטטוס'\n\t\t,ps.SPEC1 AS 'פרמטר 1'\n\t\t,ps.SPECDES1 AS 'שם פרמטר 1' ----Choose your Client preffer specdes number\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'פרמטר 2'\n\t\t,ps.SPECDES2 AS 'שם פרמטר 2' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 3' ------ SIZE\n\t\t,ps.SPECDES3 AS 'שם פרמטר 3' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 4'\n\t\t,ps.SPECDES3 AS 'שם פרמטר 4' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC4 AS 'פרמטר 5'\n\t\t,ps.SPECDES4 AS 'שם פרמטר 5' ----Choose your Client preffer specdes number\n\t\t,null AS 'פרמטר 12'\n\t    ,ps.SPEC15 AS 'פרמטר 15'\n\t\t,system.dbo.tabula_hebconvert(SPECDES15) AS 'שם פרמטר 15' \n\t\t,p.COST AS 'עלות'\n\t\t--,system.dbo.tabula_hebconvert(ps.SPEC6) AS 'מותג'\n\t\t,'Tous' AS 'מותג'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC8) AS 'מגדר'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'צבע'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC11) AS 'עונה'\n        ,system.dbo.tabula_hebconvert(ps.SPEC17) AS 'קולקציה'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC10) AS 'גזרה'\n\t\t,NULL AS 'InventoryItem' -- if the item has inventory in warhouses , from master food\n\t\t,null AS 'גיל מלאי'\n\t\t,null AS 'מיון מלאי'\n\t\t,null AS 'תאריך כניסה אחרון למלאי'\n\t\t,NULL AS 'סוג ייבוא' -- if coming from local or imported \n\t\t,NULL AS 'יחידות מכירה' -- from UNIT Table \n\t\t,NULL AS 'גודל'\n\t\t,NULL AS 'משקל'\n\t\t,null as 'מנוהל מלאי'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\n\n\n\n\n\nfrom [tous].[dbo].PART p \n\tleft join [tous].[dbo].FAMILY f on p.FAMILY=f.FAMILY\n\tleft join [tous].[dbo].FAMILYTYPES ft on f.FAMILYTYPE=ft.FAMILYTYPE\n\tleft join [tous].[dbo].PARTSPEC ps on p.PART=ps.PART\n\tleft join [tous].[dbo].PART p2 on p.MPART=p2.PART\n\tinner join (\n\tselect\n\tpti.PART\n\t,max(convert(smalldatetime, (pt.CURDATE + pt.CURTIME + 46283040) / 1440.0)) as 'DateTime'\n\tfrom [tous].[dbo].POS_TRANSACTIONS pt\n\tleft join [tous].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\n\twhere convert(smalldatetime, (pt.CURDATE + 46283040) / 1440.0) >= DATEADD(Year,-3,DATEADD(yy, DATEDIFF(yy, 0, GETDATE()), 0))\n\tand pti.IPRICEADISCOUNTBVAT<>0\n\tgroup by pti.PART\n\t) pti on pti.PART=p.PART",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_Prio_Items]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מקט",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מקט",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם מוצר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם מוצר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מזהה מוצר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מזהה מוצר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מקט מרכז",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מקט מרכז",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם מוצר מרכז",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם מוצר מרכז",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מזהה מוצר מרכז",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מזהה מוצר מרכז",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קוד קטגוריה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קוד קטגוריה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קטגוריה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קטגוריה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "משפחה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "משפחה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 5",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 12",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "פרמטר 12",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "פרמטר 15",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 15",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 15",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 15",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "עלות",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "עלות",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "מותג",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מותג",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מגדר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מגדר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "צבע",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "צבע",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "עונה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "עונה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קולקציה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קולקציה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "גזרה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "גזרה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "InventoryItem",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InventoryItem",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "גיל מלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "גיל מלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "מיון מלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "מיון מלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "תאריך כניסה אחרון למלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך כניסה אחרון למלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "סוג ייבוא",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "סוג ייבוא",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "יחידות מכירה",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "יחידות מכירה",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "גודל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "גודל",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "משקל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "משקל",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "מנוהל מלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "מנוהל מלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].PART"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Items"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Items"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-22T09:27:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MRR_WMSSKU')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_MRR_WMS_SKU",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "/****** Script for SelectTopNRows command from SSMS  ******/\nSELECT [CONSIGNEE]\n      ,[SKU]\n      ,[SKUDESC]\n      ,[SKUSHORTDESC]\n\t  --,MANUFACTURERSKU\n      ,CASE \n\t\t\tWHEN LEFT(MANUFACTURERSKU, 1) = '0' \n\t\t\tTHEN SUBSTRING(MANUFACTURERSKU, 2, LEN(MANUFACTURERSKU) - 1)\n\t\t\tELSE MANUFACTURERSKU \n\t\t\tEND AS MANUFACTURERSKU\n      ,[VENDORSKU]\n      ,[OTHERSKU]\n      ,[SKUGROUP]\n      ,[CLASSNAME]\n      ,[STATUS]\n      ,[INVENTORY]\n      ,[NEWSKU]\n      ,[INITIALSTATUS]\n      ,[VELOCITY]\n      ,[FIFOINDIFFERENCE]\n      ,[ONSITEMIN]\n      ,[ONSITEMAX]\n      ,[LASTCYCLECOUNT]\n      ,[CYCLECOUNTINT]\n      ,[LOWLIMITCOUNT]\n      ,[PREFLOCATION]\n      ,[PREFPUTREGION]\n      ,[UNITPRICE]\n      ,[PICTURE]\n      ,[PICKSORTORDER]\n      ,[DEFAULTUOM]\n      ,[OVERPICKPCT]\n      ,[OVERRECEIVEPCT]\n      ,[DAILYDEMAND]\n      ,[DAILYPICKS]\n      ,[OPORTUNITYRELPFLAG]\n      ,[TRANSPORTATIONCLASS]\n      ,[HAZCLASS]\n      ,[HUTYPE]\n      ,[DEFAULTRECUOM]\n      ,[STORAGECLASS]\n      ,[COUNTTOLERANCE]\n      ,[BASEITEM]\n      ,[NOTES]\n      ,[ADDDATE]\n      ,[ADDUSER]\n      ,[EDITDATE]\n      ,[EDITUSER]\n  FROM [SCEXPERT].[dbo].[SKU]\n  WHERE 1=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.MRR_WMSSKU",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CONSIGNEE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CONSIGNEE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SKU",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SKU",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SKUDESC",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SKUDESC",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SKUSHORTDESC",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SKUSHORTDESC",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MANUFACTURERSKU",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MANUFACTURERSKU",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VENDORSKU",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VENDORSKU",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OTHERSKU",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "OTHERSKU",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SKUGROUP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SKUGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CLASSNAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CLASSNAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "STATUS",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "INVENTORY",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "INVENTORY",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "NEWSKU",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NEWSKU",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "INITIALSTATUS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "INITIALSTATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VELOCITY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VELOCITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIFOINDIFFERENCE",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "FIFOINDIFFERENCE",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "ONSITEMIN",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "ONSITEMIN",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ONSITEMAX",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "ONSITEMAX",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "LASTCYCLECOUNT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTCYCLECOUNT",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "CYCLECOUNTINT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CYCLECOUNTINT",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "LOWLIMITCOUNT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOWLIMITCOUNT",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "PREFLOCATION",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PREFLOCATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PREFPUTREGION",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PREFPUTREGION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNITPRICE",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UNITPRICE",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "PICTURE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PICTURE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PICKSORTORDER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PICKSORTORDER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DEFAULTUOM",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DEFAULTUOM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OVERPICKPCT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										},
										"sink": {
											"name": "OVERPICKPCT",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "OVERRECEIVEPCT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										},
										"sink": {
											"name": "OVERRECEIVEPCT",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "DAILYDEMAND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "DAILYDEMAND",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "DAILYPICKS",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "DAILYPICKS",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "OPORTUNITYRELPFLAG",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OPORTUNITYRELPFLAG",
											"type": "Boolean",
											"physicalType": "Boolean"
										}
									},
									{
										"source": {
											"name": "TRANSPORTATIONCLASS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TRANSPORTATIONCLASS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HAZCLASS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HAZCLASS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HUTYPE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HUTYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DEFAULTRECUOM",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DEFAULTRECUOM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STORAGECLASS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "STORAGECLASS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COUNTTOLERANCE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "COUNTTOLERANCE",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "BASEITEM",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BASEITEM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOTES",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NOTES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ADDDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ADDDATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "ADDUSER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ADDUSER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EDITDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EDITDATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "EDITUSER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EDITUSER",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"culture": "en-IL"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WMS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_WMSSKU",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SKU"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-22T09:31:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prio_Agents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Prio_Agents",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\n\t\n\tSELECT \n\t'1' as 'EntityID'\n\t\t,CAST('1' AS varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, a.AGENT))AS varchar) AS 'AgentKey'\n\t\t,a.AGENTCODE AS 'מספר סוכן'\n\t\t,CASE \n\t\t\tWHEN a.AGENT <> 0\n\t\t\t\tTHEN a.AGENTNAME\n\t\t\tELSE 'Missing Agent\\ללא סוכן'\n\t\t\tEND AS 'סוכן'\n\t\t,CASE \n\t\t\tWHEN ma.AGENT = 0\n\t\t\t\tTHEN NULL\n\t\t\tELSE ma.AGENT\n\t\t\tEND AS 'ManagerAgentKey'\n\t\t,CASE \n\t\t\tWHEN ma.AGENT = 0\n\t\t\t\tTHEN 'Missing Manager\\ללא מנהל'\n\t\t\tELSE ma.AGENTNAME\n\t\t\tEND AS 'מנהל'\n\t\t,NULL AS 'PBIUser' ----2.1\n\t\n\t\t,GETDATE() AS RowInsertDatetime\n\tFROM [desig].[dbo].AGENTS a\n\tLEFT JOIN [desig].[dbo].AGENTS ma ON a.MAGENT = ma.AGENT ----1.1\n\t\t\n\tWHERE 1 = 1\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\n\tSELECT \n\t'2' as 'EntityID'\n\t\t,CAST('2' AS varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, a.AGENT))AS varchar) AS 'AgentKey'\n\t\t,a.AGENTCODE AS 'מספר סוכן'\n\t\t,CASE \n\t\t\tWHEN a.AGENT <> 0\n\t\t\t\tTHEN a.AGENTNAME\n\t\t\tELSE 'Missing Agent\\ללא סוכן'\n\t\t\tEND AS 'סוכן'\n\t\t,CASE \n\t\t\tWHEN ma.AGENT = 0\n\t\t\t\tTHEN NULL\n\t\t\tELSE ma.AGENT\n\t\t\tEND AS 'ManagerAgentKey'\n\t\t,CASE \n\t\t\tWHEN ma.AGENT = 0\n\t\t\t\tTHEN 'Missing Manager\\ללא מנהל'\n\t\t\tELSE ma.AGENTNAME\n\t\t\tEND AS 'מנהל'\n\t\t,NULL AS 'PBIUser' ----2.1\n\t\n\t\t,GETDATE() AS RowInsertDatetime\n\tFROM [tous].[dbo].AGENTS a\n\tLEFT JOIN [tous].[dbo].AGENTS ma ON a.MAGENT = ma.AGENT ----1.1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_Prio_Agents]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מספר סוכן",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר סוכן",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "סוכן",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "סוכן",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ManagerAgentKey",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ManagerAgentKey",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "מנהל",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מנהל",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PBIUser",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PBIUser",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].PART"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Agents"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Agents/Priority"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-15T09:59:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prio_Branches')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Prio_Branches",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\n\nSELECT distinct\n'1' as 'EntityID'\n,CAST('1' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, b.BRANCH))as varchar) AS  'BranchKey'\n,b.BRANCHNAME 'מספר סניף'\n\t,CASE WHEN b.BRANCH = 0\n\t\t\t\tTHEN 'ללא סניף'\n\t\t\tELSE system.dbo.tabula_hebconvert(BRANCHDES)\n\t\t\tEND AS 'סניף'\n,BRANCHNAME   + ' | ' +  system.dbo.tabula_hebconvert(b.BRANCHDES) AS 'מזהה סניף'\n--,pn.SUBNETWORKCODE as 'קוד תת רשת'\n\t,b.STATE 'ישוב'\n\n\n\t\t,NULL AS 'מטר רבוע'\n   ,system.dbo.tabula_hebconvert(d.DISTRICTDES) as 'איזור'\n\t\t,pn.SUBNETWORKDES as 'תת רשת'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetim\n\n\n\nFROM [desig].[dbo].BRANCHES b\nleft join [desig].[dbo].DISTRICTS d on d.DISTRICT=b.DISTRICT\nleft join [desig].[dbo].POS_SUBNETWORKS pn on pn.SUBNETWORK=b.POS_SUBNETWORK\nleft join [desig].[dbo].WAREHOUSES w on w.WARHS=b.WARHS\n\nWHERE 1=1\nand b.BRANCHDES <>''\n\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\n\nSELECT distinct\n'2' as 'EntityID'\n,CAST('2' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, b.BRANCH))as varchar) AS  'BranchKey'\n,b.BRANCHNAME 'מספר סניף'\n\t,CASE WHEN b.BRANCH = 0\n\t\t\t\tTHEN 'ללא סניף'\n\t\t\tELSE system.dbo.tabula_hebconvert(BRANCHDES)\n\t\t\tEND AS 'סניף'\n,BRANCHNAME   + ' | ' +  system.dbo.tabula_hebconvert(b.BRANCHDES) AS 'מזהה סניף'\n--,pn.SUBNETWORKCODE as 'קוד תת רשת'\n\t,b.STATE 'ישוב'\n\n\n\t\t,NULL AS 'מטר רבוע'\n   ,system.dbo.tabula_hebconvert(d.DISTRICTDES) as 'איזור'\n\t\t,pn.SUBNETWORKDES as 'תת רשת'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetim\n\n\n\nFROM [tous].[dbo].BRANCHES b\nleft join [tous].[dbo].DISTRICTS d on d.DISTRICT=b.DISTRICT\nleft join [tous].[dbo].POS_SUBNETWORKS pn on pn.SUBNETWORK=b.POS_SUBNETWORK\nleft join [tous].[dbo].WAREHOUSES w on w.WARHS=b.WARHS\n\nWHERE 1=1\nand b.BRANCHDES <>''",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_Prio_Branches",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מספר סניף",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר סניף",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "סניף",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "סניף",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מזהה סניף",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מזהה סניף",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ישוב",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ישוב",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מטר רבוע",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "מטר רבוע",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "איזור",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "איזור",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "תת רשת",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "תת רשת",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetim",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetim",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].PART"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Branches"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Branches/Priority"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-21T12:32:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prio_Customers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Prio_Customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\n\n\nselect \n'1' as 'EntityID'\n,CAST('1' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.CUST))as varchar) AS 'AccountKey'\n,c.CUSTNAME as 'מספר לקוח'\n,c.CUSTNAME + ' | ' +case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'מזהה לקוח'\n,case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'שם לקוח'\n\n----Enable This Part for Parent and Child Customers method\n\n--,c2.CUSTNAME as 'מספר לקוח אב'\n--,c2.CUSTNAME + ' | ' +case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'מזהה לקוח אב'\n--,case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'שם לקוח אב'\n--,Case when c2.CUSTDES='' then c.CUSTDES else case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end end as 'לקוחות' -- this fiels enable to contain all regular customers and all Fathers in the sam column\n\n,ct.CTYPECODE as 'קוד קטגורייה'\n,system.dbo.tabula_hebconvert(ct.CTYPENAME) as 'קטגוריית לקוח' \n,cs.SPEC1 AS 'פרמטר 1'\n,cs.SPEC2 AS 'פרמטר 2'\n,cs.SPEC3 AS 'פרמטר 3'\n,cs.SPEC4 AS 'פרמטר 4'\n,cs.SPEC5 AS 'פרמטר 5'\n,cs.SPEC6 AS 'פרמטר 6'\n,cs.SPEC7 AS 'פרמטר 7'\n,cs.SPEC8 AS 'פרמטר 8'\n,c.[STATE] AS 'עיר'\n,c.ADDRESS AS 'כתובת'\n,c.PHONE AS 'מספר טלפון'\n,cst.STATDES AS 'סטטוס לקוח'\n,CAST('1' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.AGENT))as varchar) AS 'AgentKey'\n,null as 'תנאי תשלום ללקוח'\n,null AS 'MAXOBLIGO'\n,null as 'MAXCREDIT'\n,null as 'אובליגו'\n,null as 'OBLIGO Balance' --יתרת אובליגו\t\t\n,null 'IsClubMember' --need to change according to your cust\n,null as 'מגדר' --need to change according to your cust\n,null as 'גיל' --need to change according to your cust\n,null as 'תאריך יום הולדת' --need to change according to your cust\n,null as 'תאריך הצטרפות'\n,null as 'תאריך תוקף מועדון' --need to change according to your cust\n,null as 'שיוך למועדון לקוחות' --need to change according to your cust\n,null as 'אישור מייל' --need to change according to your cust\n,null as 'אישור SMS' --need to change according to your cust\n,case when Month(getdate())= MoNTH(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0))) \n then 'חודש נוכחי' else FORMAT(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0)),'MMMM')\n END as 'חודש יום הולדת' --need to change according to your cust\n,c.BRANCH as 'JoinBranchID' --need to change according to your cust\n\n,GETDATE() AS 'RowInsertDatetime'\n\n\nfrom [desig].[dbo].CUSTOMERS c\nLeft join [desig].[dbo].CTYPE ct  on c.CTYPE=ct.CTYPE\nLeft join [desig].[dbo].CUSTSPEC cs on cs.CUST=c.CUST\nLeft join [desig].[dbo].[COUNTRIES] on [COUNTRIES].COUNTRY=c.COUNTRY\nleft join [desig].[dbo].CUSTOMERS c2 on c.MCUST=c2.CUST ----Enable This Part for Parent and Child Customers method\nleft join [desig].[dbo].CUSTSTATS cst on c.CUSTSTAT=cst.CUSTSTAT\n\nwhere\nexists\n(\nSELECT null FROM [desig].[dbo].INVOICES i\nwhere i.CUST=c.CUST\n)\nor  exists\n(\nSELECT null  FROM [desig].[dbo].DOCUMENTS d\nwhere d.CUST=c.CUST\n)\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\n\n\nselect \n\t    '2' as 'EntityID'\n,CAST('2' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.CUST))as varchar) AS 'AccountKey'\n,c.CUSTNAME as 'מספר לקוח'\n,c.CUSTNAME + ' | ' +case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'מזהה לקוח'\n,case when substring(c.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c.CUSTDES,1,1)='.'  \nTHEN  system.dbo.tabula_hebconvert(c.CUSTDES) \nELSE system.dbo.tabula_hebconvert(c.CUSTDES) end as 'שם לקוח'\n\n----Enable This Part for Parent and Child Customers method\n\n--,c2.CUSTNAME as 'מספר לקוח אב'\n--,c2.CUSTNAME + ' | ' +case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'מזהה לקוח אב'\n--,case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end as 'שם לקוח אב'\n--,Case when c2.CUSTDES='' then c.CUSTDES else case when substring(c2.CUSTDES,1,1) like '%[a-z,A-Z]%' or substring(c2.CUSTDES,1,1)='.'  THEN  REVERSE(c2.CUSTDES) ELSE c2.CUSTDES end end as 'לקוחות' -- this fiels enable to contain all regular customers and all Fathers in the sam column\n\n,ct.CTYPECODE as 'קוד קטגורייה'\n,system.dbo.tabula_hebconvert(ct.CTYPENAME) as 'קטגוריית לקוח' \n,cs.SPEC1 AS 'פרמטר 1'\n,cs.SPEC2 AS 'פרמטר 2'\n,cs.SPEC3 AS 'פרמטר 3'\n,cs.SPEC4 AS 'פרמטר 4'\n,cs.SPEC5 AS 'פרמטר 5'\n,cs.SPEC6 AS 'פרמטר 6'\n,cs.SPEC7 AS 'פרמטר 7'\n,cs.SPEC8 AS 'פרמטר 8'\n,c.[STATE] AS 'עיר'\n,c.ADDRESS AS 'כתובת'\n,c.PHONE AS 'מספר טלפון'\n,cst.STATDES AS 'סטטוס לקוח'\n,CAST('2' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, c.AGENT))as varchar) AS 'AgentKey'\n,null as 'תנאי תשלום ללקוח'\n,null AS 'MAXOBLIGO'\n,null as 'MAXCREDIT'\n,null as 'אובליגו'\n,null as 'OBLIGO Balance' --יתרת אובליגו\t\t\n,null 'IsClubMember' --need to change according to your cust\n,null as 'מגדר' --need to change according to your cust\n,null as 'גיל' --need to change according to your cust\n,null as 'תאריך יום הולדת' --need to change according to your cust\n,null as 'תאריך הצטרפות'\n,null as 'תאריך תוקף מועדון' --need to change according to your cust\n,null as 'שיוך למועדון לקוחות' --need to change according to your cust\n,null as 'אישור מייל' --need to change according to your cust\n,null as 'אישור SMS' --need to change according to your cust\n,case when Month(getdate())= MoNTH(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0))) \n then 'חודש נוכחי' else FORMAT(DATEADD(year, -18, CONVERT(SMALLDATETIME, (c.CREATEDDATE + 46283040) / 1440.0)),'MMMM')\n END as 'חודש יום הולדת' --need to change according to your cust\n,c.BRANCH as 'JoinBranchID' --need to change according to your cust\n\n,GETDATE() AS 'RowInsertDatetime'\n\n\nfrom [tous].[dbo].CUSTOMERS c\nLeft join [tous].[dbo].CTYPE ct  on c.CTYPE=ct.CTYPE\nLeft join [tous].[dbo].CUSTSPEC cs on cs.CUST=c.CUST\nLeft join [tous].[dbo].[COUNTRIES] on [COUNTRIES].COUNTRY=c.COUNTRY\nleft join [tous].[dbo].CUSTOMERS c2 on c.MCUST=c2.CUST ----Enable This Part for Parent and Child Customers method\nleft join [tous].[dbo].CUSTSTATS cst on c.CUSTSTAT=cst.CUSTSTAT\n\nwhere\nexists\n(\nSELECT null FROM [tous].[dbo].INVOICES i\nwhere i.CUST=c.CUST\n)\nor  exists\n(\nSELECT null  FROM [tous].[dbo].DOCUMENTS d\nwhere d.CUST=c.CUST\n)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_Prio_Customers]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מספר לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר לקוח",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מזהה לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מזהה לקוח",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם לקוח",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קוד קטגורייה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קוד קטגורייה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קטגוריית לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קטגוריית לקוח",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 6",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 6",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 7",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 7",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 8",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 8",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "עיר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "עיר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "כתובת",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "כתובת",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מספר טלפון",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מספר טלפון",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "סטטוס לקוח",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "סטטוס לקוח",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "תנאי תשלום ללקוח",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תנאי תשלום ללקוח",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "MAXOBLIGO",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MAXOBLIGO",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "MAXCREDIT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MAXCREDIT",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "אובליגו",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "אובליגו",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "OBLIGO Balance",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OBLIGO Balance",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "IsClubMember",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IsClubMember",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "מגדר",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "מגדר",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "גיל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "גיל",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "תאריך יום הולדת",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך יום הולדת",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "תאריך הצטרפות",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך הצטרפות",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "תאריך תוקף מועדון",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך תוקף מועדון",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "שיוך למועדון לקוחות",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "שיוך למועדון לקוחות",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "אישור מייל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "אישור מייל",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "אישור SMS",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "אישור SMS",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "חודש יום הולדת",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "חודש יום הולדת",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "JoinBranchID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "JoinBranchID",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].CUSTOMERS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Customers"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Customers/Priority"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-15T09:59:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prio_Inventory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Prio_Inventory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\t\n\n\nselect \n'1' as 'EntityID'\n--,'1' + Inv.ItemKey as 'ItemKey'\n--,CONCAT('1', Inv.ItemKey) as 'ItemKey'\n,cast('1' as varchar) + cast(Inv.ItemKey as varchar) as 'ItemKey'\n,cast(Inv.[Date] as date) as 'Date'\n,Inv.[TYPE] as 'Type'\n,Inv.[Status] as 'סטטוס'\n--,'1' + Inv.[WarehsKey] as 'WarehsKey'\n--,CONCAT('1' , Inv.[WarehsKey]) as 'WarehsKey'\n,CAST('1' as varchar) + cast( Inv.[WarehsKey] as varchar) as 'WarehsKey'\n--,'1' + Inv.[BranchKey] as 'BranchKey'\n--,Concat('1', Inv.[BranchKey]) as 'BranchKey'\n,CAST('1' as varchar) + cast(Inv.[BranchKey] as varchar) as 'BranchKey'\n,Inv.[CostperUnit]\n,SUM(Quantity) as 'Quantity'\n,SUM([Stock Value]) as 'StockValue'\n\n\n,Inv.[RowInsertDatetime]\nFROM\n(\n\t\t SELECT \n\t\tCONVERT(INT, CONVERT(VARCHAR, wb.PART)) AS 'ItemKey'\n\t\t,convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0) AS 'Date'\n\t\t,ws.[TYPE] \t\n\t\t,c.CUSTNAME AS 'Status'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, wb.WARHS)) AS 'WarehsKey'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, ws.POS_BRANCH)) AS 'BranchKey' -- Only Retail with POS\n\t\t--,CONVERT(INT, CONVERT(VARCHAR, b.BRANCH)) AS 'BranchKey' -- Only Retail without POS\n\t\t,p.COST as 'CostperUnit'\n\t\t,(wb.BALANCE) / 1000.0 AS 'Quantity' \n\t\t,(wb.BALANCE) / 1000.0 * (p.COST) as 'Stock Value'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\t\t--,wt.WARHSTYPENAME -- Only QA \n\t\t-- ,p.PARTNAME -- Only QA  \n\t\t--,ws.WARHSNAME -- Only QA\n\t\t--,w.WARHSDES  -- Only QA\n       FROM [desig].[dbo].WARHSBAL wb \n       Left join  [desig].[dbo].WAREHOUSES ws ON ws.WARHS = wb.WARHS \n       Left join  [desig].[dbo].CUSTOMERS c ON c.CUST = wb.CUST   \n       Left join  [desig].[dbo].PART p on wb.PART=p.PART \n\t   Left join  [desig].[dbo].BRANCHES b ON b.WARHS = wb.WARHS -- Only Retail without POS\n\t  -- left join [dbo].WARHSTYPE wt on wt.WARHSTYPE=w.WARHSTYPE -- Only QA\nWHERE  1 = 1\nand year(convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)) >= 2018\n       --and ws.WARHSNAME in ('Main', 'SV')  --QA Filter\n\t   --and p.PARTNAME='LL-1C' --QA Filter\n\t   --and convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)>='01/01/2016' --QA Filter\n)Inv\nGROUP BY\nInv.ItemKey\n,Inv.Date\n,Inv.TYPE\n,Inv.Status\n,Inv.WarehsKey\n,Inv.BranchKey\n,Inv.CostperUnit\n,Inv.RowInsertDatetime\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\nselect \n'2' as 'EntityID'\n--,'1' + Inv.ItemKey as 'ItemKey'\n--,CONCAT('1', Inv.ItemKey) as 'ItemKey'\n,cast('2' as varchar) + cast(Inv.ItemKey as varchar) as 'ItemKey'\n,cast(Inv.[Date] as date) as 'Date'\n,Inv.[TYPE] as 'Type'\n,Inv.[Status] as 'סטטוס'\n,CAST('2' as varchar) + cast( Inv.[WarehsKey] as varchar) as 'WarehsKey'\n,CAST('2' as varchar) + cast(Inv.[BranchKey] as varchar) as 'BranchKey'\n,Inv.[CostperUnit]\n,SUM(Quantity) as 'Quantity'\n,SUM([Stock Value]) as 'StockValue'\n\n\n,Inv.[RowInsertDatetime]\nFROM\n(\n\t\t SELECT \n\t\tCONVERT(INT, CONVERT(VARCHAR, wb.PART)) AS 'ItemKey'\n\t\t,convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0) AS 'Date'\n\t\t,ws.[TYPE] \t\n\t\t,c.CUSTNAME AS 'Status'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, wb.WARHS)) AS 'WarehsKey'\n\t\t,CONVERT(INT, CONVERT(VARCHAR, ws.POS_BRANCH)) AS 'BranchKey' -- Only Retail with POS\n\t\t--,CONVERT(INT, CONVERT(VARCHAR, b.BRANCH)) AS 'BranchKey' -- Only Retail without POS\n\t\t,p.COST as 'CostperUnit'\n\t\t,(wb.BALANCE) / 1000.0 AS 'Quantity' \n\t\t,(wb.BALANCE) / 1000.0 * (p.COST) as 'Stock Value'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\t\t--,wt.WARHSTYPENAME -- Only QA \n\t\t-- ,p.PARTNAME -- Only QA  \n\t\t--,ws.WARHSNAME -- Only QA\n\t\t--,w.WARHSDES  -- Only QA\n       FROM [tous].[dbo].WARHSBAL wb \n       Left join  [tous].[dbo].WAREHOUSES ws ON ws.WARHS = wb.WARHS \n       Left join  [tous].[dbo].CUSTOMERS c ON c.CUST = wb.CUST   \n       Left join  [tous].[dbo].PART p on wb.PART=p.PART \n\t   Left join  [tous].[dbo].BRANCHES b ON b.WARHS = wb.WARHS -- Only Retail without POS\n\t  -- left join [dbo].WARHSTYPE wt on wt.WARHSTYPE=w.WARHSTYPE -- Only QA\nWHERE  1 = 1\nand year(convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)) >= 2018\n       --and ws.WARHSNAME in ('Main', 'SV')  --QA Filter\n\t   --and p.PARTNAME='LL-1C' --QA Filter\n\t   --and convert(smalldatetime, (wb.LASTDATE + 46283040) / 1440.0)>='01/01/2016' --QA Filter\n)Inv\nGROUP BY\nInv.ItemKey\n,Inv.Date\n,Inv.TYPE\n,Inv.Status\n,Inv.WarehsKey\n,Inv.BranchKey\n,Inv.CostperUnit\n,Inv.RowInsertDatetime",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_Prio_Inventory",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "סטטוס",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "סטטוס",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WarehsKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WarehsKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CostperUnit",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "CostperUnit",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "StockValue",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "StockValue",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].PART"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Inventory"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Inventory/Priority"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-21T10:20:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prio_Items')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Prio_Items",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\nselect DISTINCT \n\t'1' as 'EntityID'\n\t\t,CAST('1' as varchar) +CAST( CONVERT(BIGINT, CONVERT(VARCHAR, p.PART)) as varchar) AS 'ItemKey'\n\t\t,p.PARTNAME AS 'מקט'\n\t\t--,p.PARTDES AS 'שם מוצר'\n\t\t,system.dbo.tabula_hebconvert(p.PARTDES) AS 'שם מוצר'\n\t\t--,p.PARTNAME + ' | ' + p.PARTDES AS 'מזהה מוצר'\n\t\t,p.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p.PARTDES) AS 'מזהה מוצר'\n\n\t\t,p2.PARTNAME AS 'מקט מרכז'\n\t\t,system.dbo.tabula_hebconvert(p2.PARTDES) AS 'שם מוצר מרכז'\n\t\t,p2.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p2.PARTDES) AS 'מזהה מוצר מרכז'\n\n\t\t,f.FAMILYNAME AS 'קוד קטגוריה' -- Product Category Code\n\t\t,system.dbo.tabula_hebconvert(f.FAMILYDES) AS 'קטגוריה' -- Product Category Name\n\t\t,system.dbo.tabula_hebconvert(ft.FTNAME) AS 'משפחה'\n\t\t----2.2\n\t\t--,ps.STATDES AS 'סטטוס'\n\t\t,ps.SPEC1 AS 'פרמטר 1'\n\t\t,ps.SPECDES1 AS 'שם פרמטר 1' ----Choose your Client preffer specdes number\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'פרמטר 2'\n\t\t,ps.SPECDES2 AS 'שם פרמטר 2' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 3' ------ SIZE\n\t\t,ps.SPECDES3 AS 'שם פרמטר 3' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 4'\n\t\t,ps.SPECDES3 AS 'שם פרמטר 4' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC4 AS 'פרמטר 5'\n\t\t,ps.SPECDES4 AS 'שם פרמטר 5' ----Choose your Client preffer specdes number\n\t\t,null AS 'פרמטר 12'\n\t    ,ps.SPEC15 AS 'פרמטר 15'\n\t\t,system.dbo.tabula_hebconvert(SPECDES15) AS 'שם פרמטר 15' \n\t\t,p.COST AS 'עלות'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC6) AS 'מותג'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC8) AS 'מגדר'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'צבע'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC11) AS 'עונה'\n        ,system.dbo.tabula_hebconvert(ps.SPEC17) AS 'קולקציה'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC10) AS 'גזרה'\n\t\t,NULL AS 'InventoryItem' -- if the item has inventory in warhouses , from master food\n\t\t,null AS 'גיל מלאי'\n\t\t,null AS 'מיון מלאי'\n\t\t,null AS 'תאריך כניסה אחרון למלאי'\n\t\t,NULL AS 'סוג ייבוא' -- if coming from local or imported \n\t\t,NULL AS 'יחידות מכירה' -- from UNIT Table \n\t\t,NULL AS 'גודל'\n\t\t,NULL AS 'משקל'\n\t\t,null as 'מנוהל מלאי'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\n\nfrom [desig].[dbo].PART p \n\tleft join [desig].[dbo].FAMILY f on p.FAMILY=f.FAMILY\n\tleft join [desig].[dbo].FAMILYTYPES ft on f.FAMILYTYPE=ft.FAMILYTYPE\n\tleft join [desig].[dbo].PARTSPEC ps on p.PART=ps.PART\n\tleft join [desig].[dbo].PART p2 on p.MPART=p2.PART\n\tinner join (\n\tselect\n\tpti.PART\n\t,max(convert(smalldatetime, (pt.CURDATE + pt.CURTIME + 46283040) / 1440.0)) as 'DateTime'\n\tfrom [desig].[dbo].POS_TRANSACTIONS pt\n\tleft join [desig].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\n\twhere 1=1\n\tand (pt.CURDATE <> 51852960 and convert(smalldatetime, (pt.CURDATE + 46283040) / 1440.0) >= DATEADD(Year,-3,DATEADD(yy, DATEDIFF(yy, 0, GETDATE()), 0)))\n\tand pti.IPRICEADISCOUNTBVAT<>0\n\tgroup by pti.PART\n\t) pti on pti.PART=p.PART\n\n\twhere 1=1\n\n\t\n\n-------------------------------------------------2-tous------------------------------------------------\nunion all\nselect DISTINCT \n\t'2' as 'EntityID'\n\t\t,CAST('2' as varchar) +CAST( CONVERT(BIGINT, CONVERT(VARCHAR, p.PART)) as varchar) AS 'ItemKey'\n\t\t,p.PARTNAME AS 'מקט'\n\t\t--,p.PARTDES AS 'שם מוצר'\n\t\t,system.dbo.tabula_hebconvert(p.PARTDES) AS 'שם מוצר'\n\t\t--,p.PARTNAME + ' | ' + p.PARTDES AS 'מזהה מוצר'\n\t\t,p.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p.PARTDES) AS 'מזהה מוצר'\n\n\t\t,p2.PARTNAME AS 'מקט מרכז'\n\t\t,system.dbo.tabula_hebconvert(p2.PARTDES) AS 'שם מוצר מרכז'\n\t\t,p2.PARTNAME + ' | ' + system.dbo.tabula_hebconvert(p2.PARTDES) AS 'מזהה מוצר מרכז'\n\n\t\t,f.FAMILYNAME AS 'קוד קטגוריה' -- Product Category Code\n\t\t,system.dbo.tabula_hebconvert(f.FAMILYDES) AS 'קטגוריה' -- Product Category Name\n\n\t\t--,ft.FTNAME AS 'משפחה'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC11) AS 'משפחה'\n\t\t----2.2\n\t\t--,ps.STATDES AS 'סטטוס'\n\t\t,ps.SPEC1 AS 'פרמטר 1'\n\t\t,ps.SPECDES1 AS 'שם פרמטר 1' ----Choose your Client preffer specdes number\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'פרמטר 2'\n\t\t,ps.SPECDES2 AS 'שם פרמטר 2' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 3' ------ SIZE\n\t\t,ps.SPECDES3 AS 'שם פרמטר 3' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC3 AS 'פרמטר 4'\n\t\t,ps.SPECDES3 AS 'שם פרמטר 4' ----Choose your Client preffer specdes number\n\t\t,ps.SPEC4 AS 'פרמטר 5'\n\t\t,ps.SPECDES4 AS 'שם פרמטר 5' ----Choose your Client preffer specdes number\n\t\t,null AS 'פרמטר 12'\n\t    ,ps.SPEC15 AS 'פרמטר 15'\n\t\t,system.dbo.tabula_hebconvert(SPECDES15) AS 'שם פרמטר 15' \n\t\t,p.COST AS 'עלות'\n\t\t--,system.dbo.tabula_hebconvert(ps.SPEC6) AS 'מותג'\n\t\t,'Tous' AS 'מותג'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC8) AS 'מגדר'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC2) AS 'צבע'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC11) AS 'עונה'\n        ,system.dbo.tabula_hebconvert(ps.SPEC17) AS 'קולקציה'\n\t\t,system.dbo.tabula_hebconvert(ps.SPEC10) AS 'גזרה'\n\t\t,NULL AS 'InventoryItem' -- if the item has inventory in warhouses , from master food\n\t\t,null AS 'גיל מלאי'\n\t\t,null AS 'מיון מלאי'\n\t\t,null AS 'תאריך כניסה אחרון למלאי'\n\t\t,NULL AS 'סוג ייבוא' -- if coming from local or imported \n\t\t,NULL AS 'יחידות מכירה' -- from UNIT Table \n\t\t,NULL AS 'גודל'\n\t\t,NULL AS 'משקל'\n\t\t,null as 'מנוהל מלאי'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\n\n\n\n\n\nfrom [tous].[dbo].PART p \n\tleft join [tous].[dbo].FAMILY f on p.FAMILY=f.FAMILY\n\tleft join [tous].[dbo].FAMILYTYPES ft on f.FAMILYTYPE=ft.FAMILYTYPE\n\tleft join [tous].[dbo].PARTSPEC ps on p.PART=ps.PART\n\tleft join [tous].[dbo].PART p2 on p.MPART=p2.PART\n\tinner join (\n\tselect\n\tpti.PART\n\t,max(convert(smalldatetime, (pt.CURDATE + pt.CURTIME + 46283040) / 1440.0)) as 'DateTime'\n\tfrom [tous].[dbo].POS_TRANSACTIONS pt\n\tleft join [tous].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\n\twhere convert(smalldatetime, (pt.CURDATE + 46283040) / 1440.0) >= DATEADD(Year,-3,DATEADD(yy, DATEDIFF(yy, 0, GETDATE()), 0))\n\tand pti.IPRICEADISCOUNTBVAT<>0\n\tgroup by pti.PART\n\t) pti on pti.PART=p.PART",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [MRR_Prio_Items]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מקט",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מקט",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם מוצר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם מוצר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מזהה מוצר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מזהה מוצר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מקט מרכז",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מקט מרכז",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם מוצר מרכז",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם מוצר מרכז",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מזהה מוצר מרכז",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מזהה מוצר מרכז",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קוד קטגוריה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קוד קטגוריה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קטגוריה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קטגוריה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "משפחה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "משפחה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 5",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 5",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "פרמטר 12",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "פרמטר 12",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "פרמטר 15",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "פרמטר 15",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם פרמטר 15",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "שם פרמטר 15",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "עלות",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "עלות",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "מותג",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מותג",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "מגדר",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "מגדר",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "צבע",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "צבע",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "עונה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "עונה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קולקציה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "קולקציה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "גזרה",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "גזרה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "InventoryItem",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InventoryItem",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "גיל מלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "גיל מלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "מיון מלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "מיון מלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "תאריך כניסה אחרון למלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "תאריך כניסה אחרון למלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "סוג ייבוא",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "סוג ייבוא",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "יחידות מכירה",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "יחידות מכירה",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "גודל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "גודל",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "משקל",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "משקל",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "מנוהל מלאי",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "מנוהל מלאי",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].PART"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Items"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Items/Priority"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-15T09:59:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prio_Targets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MRR_Prio_Targets",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n/*\n1-desig\n2-tous\n*/\n-----------------------\nSELECT \n'1' as 'EntityID'\n,CAST('1' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, pmt.BRANCH))as varchar) AS  'BranchKey'\n,pmt.YEARNUM as 'Year'\n,pmt.MONTHNUM as 'Month'\n,pmt.TARGETSUM as 'Target'\n\nFROM [desig].[dbo].POS_MONTHTARGETS pmt\nwhere \npmt.YEARNUM <> 0\n\nUnion all\n\nSELECT \n'2' as 'EntityID'\n,CAST('2' as varchar) + cast(CONVERT(INT, CONVERT(VARCHAR, pmt.BRANCH))as varchar) AS  'BranchKey'\n,pmt.YEARNUM as 'Year'\n,pmt.MONTHNUM as 'Month'\n,pmt.TARGETSUM as 'Target'\n\nFROM [tous].[dbo].POS_MONTHTARGETS pmt\nwhere \npmt.YEARNUM <> 0\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE MRR_Prio_Targets",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Year",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Month",
											"type": "Int64",
											"physicalType": "Int64"
										}
									},
									{
										"source": {
											"name": "Target",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Target",
											"type": "Double",
											"physicalType": "Double"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "CUSTOMER"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Targets"
								}
							}
						]
					},
					{
						"name": "sp_DWH_FactTarget",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MRR_Prio_Targets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_FactTarget]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Targets/Priority"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-27T13:21:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RLS Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_RLS_Agents",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "RLS_Agents.xlsx"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_RLS_Agents",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "סמ\" סוכן",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סמ\" סוכן",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BI_USER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BI_USER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם סוכן",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שם סוכן",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם מנהל",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שם מנהל",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "יוזר מנהל",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "יוזר מנהל",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_RLS",
								"type": "DatasetReference",
								"parameters": {
									"filename": "RLS_Agents.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "RLS_Agents",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_RLS_Cosmetics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "RLS_Cosmetics.xlsx"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_RLS_Cosmetics",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PBIUser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBIUser",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_RLS",
								"type": "DatasetReference",
								"parameters": {
									"filename": "RLS_Cosmetics.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "RLS_Cosmetics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_RLS_Retail",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "RLS_Retail.xlsx"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_RLS_Retail",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "שם רשת",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שם רשת",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קוד רשת",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "קוד רשת",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PBI User",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBI User",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_RLS",
								"type": "DatasetReference",
								"parameters": {
									"filename": "RLS_Retail.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "RLS_Retail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RLS"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-22T09:29:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RLS_Agents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy RLS_Agents",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "RLS_Agents.xlsx"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_RLS_Agents",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "סמ\" סוכן",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סמ\" סוכן",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BI_USER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BI_USER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם סוכן",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שם סוכן",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "שם מנהל",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שם מנהל",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "יוזר מנהל",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "יוזר מנהל",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_RLS",
								"type": "DatasetReference",
								"parameters": {
									"filename": "RLS_Agents.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "RLS_Agents",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RLS/RLS"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-21T12:32:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RLS_Cosmetics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy RLS_Cosmetics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "RLS_Cosmetics.xlsx"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_RLS_Cosmetics",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "חטיבה",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PBIUser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBIUser",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_RLS",
								"type": "DatasetReference",
								"parameters": {
									"filename": "RLS_Cosmetics.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "RLS_Cosmetics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RLS/RLS"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-21T12:32:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RLS_Retail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy RLS_Retail",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"fileFilter": "RLS_Retail.xlsx"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table MRR_RLS_Retail",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "שם רשת",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שם רשת",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "קוד רשת",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "קוד רשת",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PBI User",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PBI User",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV_RLS",
								"type": "DatasetReference",
								"parameters": {
									"filename": "RLS_Retail.xlsx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "RLS_Retail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "RLS/RLS"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-21T12:32:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sales Main Run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sp_STG_FactSales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_STG_CAV_FactSales",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy_Prio_Sales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_STG_FactSales]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_DWH_FactSales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "sp_STG_FactSales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_DWH_FactSales]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_STG_CAV_FactSales",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_CAV_Sales",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_STG_CAV_FactSales]"
						},
						"linkedServiceName": {
							"referenceName": "dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_CAV_Orders",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(2,'Year')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCSVKCSTINV.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE MRR_CAV_Orders",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שנה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AGENTCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מספר סוכן",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COIN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COIN",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COINRATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COINRATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CUSTOMER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מספר לקוח",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "תאריך חשבונית",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVPREPARDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVPREPARDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DAYELETCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DAYELETCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TALPANCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TALPANCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISCOUNTPERCENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISCOUNTPERCENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROSS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TOTALDUESUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TOTALDUESUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALEDISCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SALEDISCOUNT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VAT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STORE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STORE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AGENTCODETB",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סוכן",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DAYELETCODETB",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DAYELETCODETB",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TALPANCODETB",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TALPANCODETB",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALEDISCOUNTSSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SALEDISCOUNTSSUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVSDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVSDATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COORDINV",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מספר חשבונית",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DIARYORDERNUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "פקודת יומן",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DIARYORDERDAT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DIARYORDERDAT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATCLS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DATCLS",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Orders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_CAV_Sales",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_CAV_Orders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@getPastTime(2,'Year')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"fileFilter": "ASCSVKCSTINVLN.CSV"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE MRR_CAV_Sales",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שנה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVOICE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVLINE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "שורה בחשבונית",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CASES",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CASES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FACTOR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "גורם אירוז",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSSPRC1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GROSSPRC1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSSSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סה\"כ לפני הנחה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEMCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "פריט",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINENET",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סה\"כ נטו",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINESALEDISCOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "סה\"כ הנחה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SINGELQUN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "כמות",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GROSSPRC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "מחיר ליח' לפני הנחה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVPREPARDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "תאריך אספקה",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HAN2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HAN2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HAN3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HAN3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANADDCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANADDCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANADDPRECENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANADDPRECENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANMIVZACODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANMIVZACODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANMIVZAPERCENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANMIVZAPERCENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANREGULARCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANREGULARCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HANREGULARPERCENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HANREGULARPERCENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINEEXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINEEXTRADISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINESALEDISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINESALEDISCOUNTSUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LINETRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LINETRADEDISCOUNTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESONCODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RESONCODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BONGROUP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BONGROUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BONVAL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BONVAL",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CAV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MRR_CAV_Sales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy_Prio_Sales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n/*\n1-desig\n2-tous\n*/\n-------------------------------------------------1-desig------------------------------------------------\nSELECT \n\n'1' as 'EntityID'\n          ,pt.TRANSACTNUM AS 'חשבונית'\n\t\t--,ii.KLINE AS 'InvoiceLineNumber'\n\t\t,'POS' AS 'DocName'\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.CUST)) as varchar)   AS 'AccountKey' \n\n\t\t--choose one of the above , The defauls is uncomment :\n\t\t,CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) AS 'Date' -- Invoice date  -- Date from Invoices in case you need just invoices \n\n\t\t,pt.CURTIME AS 'Time'\n\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.POS_USERBSALE)) as varchar) AS 'AgentKey' -- the sales representor\n\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.PART)) as varchar) AS 'ItemKey'\n\n\n\n\t\t,CAST('1' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.BRANCH)) as varchar) AS 'BranchKey'\n\t\t,null as 'EmployeeKey'\n\t\t,pti.CLUB as 'חבר מועדון'\n\n\t\t--,(1 - (1 - ii.[T$PERCENT] / 100) * (1 - i.[T$PERCENT] / 100)) AS 'DiscountPercent' -- the DiscountPercent for the invoice and invoice line\n\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000))/(1+(pti.VATPERCENT/100)),2) AS 'LineTotalDiscount' -- the discount from gross price to the net\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000)),2) as 'LineTotalDiscountVAT'\n\t\t--,ROUND(ii.PRICE, 2) * ii.IEXCHANGE AS 'UnitGrossPrice'\n\t\t,ROUND(pti.PRICE/(1+(pti.VATPERCENT/100)),2) AS 'UnitNetPrice'\n\t\t,pti.PRICE as 'UnitPriceVAT'\n\n\t\t,(pti.QUANT/1000.0) AS 'Quantity'\n\t\t,null as 'factoryQuantity'\n\t\t,null AS 'LineTotalCost' \n\t\t,(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100))*(pti.PRICE/(1+(pti.VATPERCENT/100))*(pti.QUANT/1000.0)) AS 'LineTotalNet'\n\t\t--ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000)),2) AS 'LineTotalNet'\n\n\t    ,null AS 'LineTotalNet_USD'\n\t\t,ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000.0)*(1+(pti.VATPERCENT/100))),2) AS 'LineTotalNetVAT'\n\t\t,null AS 'LineTotalNetVAT_USD'\n\t\t,CONVERT(INT, LEFT(CONVERT(VARCHAR, CONVERT(DATETIME, (i.IVDATE + 46283040) / 1440.0), 112), 6)) AS YearMonth\n\t\t,null as 'סטטוס'\n\t\t,null  as 'ChargeFlag'  \n\t\t,null as 'סטטוס ליקוט כותרת'\n\t    ,null  as 'סטטוס ליקוט שורה'\n\t\t,null  as 'דגל סטורנו'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\n\nfrom [desig].[dbo].POS_TRANSACTIONS pt \nleft join  [desig].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\nleft join [desig].[dbo].PART p on p.PART=pti.PART\n--left join [desig].[dbo].Costs cost on cost.CURDATE=pt.CURDATE and cost.ItemID=pti.PART\nleft join [desig].[dbo].INVOICES i on i.IV=pti.IV\n\t\t\t\nWHERE 1=1 \nAND (pt.CURDATE <> 51852960 and CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) >= DATEADD(yy,DATEDIFF(yy,0,GETDATE())-3,0))\n--and pti.PART <> ''\n--and pt.TRANSACTNUM <> 'C498T000056'\n-------------------------------------------------2-tous------------------------------------------------\nunion all\n\nSELECT \n\n'2' as 'EntityID'\n          ,pt.TRANSACTNUM AS 'חשבונית'\n\t\t--,ii.KLINE AS 'InvoiceLineNumber'\n\t\t,'POS' AS 'DocName'\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.CUST)) as varchar)   AS 'AccountKey' \n\n\t\t--choose one of the above , The defauls is uncomment :\n\t\t,CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) AS 'Date' -- Invoice date  -- Date from Invoices in case you need just invoices \n\n\t\t,pt.CURTIME AS 'Time'\n\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.POS_USERBSALE)) as varchar) AS 'AgentKey' -- the sales representor\n\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pti.PART)) as varchar) AS 'ItemKey'\n\n\n\n\t\t,CAST('2' as varchar) + CAST(CONVERT(INT, CONVERT(VARCHAR, pt.BRANCH)) as varchar) AS 'BranchKey'\n\t\t,null as 'EmployeeKey'\n\t\t,null as 'חבר מועדון'\n\n\t\t--,(1 - (1 - ii.[T$PERCENT] / 100) * (1 - i.[T$PERCENT] / 100)) AS 'DiscountPercent' -- the DiscountPercent for the invoice and invoice line\n\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000))/(1+(pti.VATPERCENT/100)),2) AS 'LineTotalDiscount' -- the discount from gross price to the net\n\t\t,ROUND((1-(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100)))*(pti.PRICE*(pti.QUANT/1000)),2) as 'LineTotalDiscountVAT'\n\t\t--,ROUND(ii.PRICE, 2) * ii.IEXCHANGE AS 'UnitGrossPrice'\n\t\t,ROUND(pti.PRICE/(1+(pti.VATPERCENT/100)),2) AS 'UnitNetPrice'\n\t\t,pti.PRICE as 'UnitPriceVAT'\n\n\t\t,(pti.QUANT/1000.0) AS 'Quantity'\n\t\t,null as 'factoryQuantity'\n\t\t,null AS 'LineTotalCost' \n\t\t,(1-(pti.T$PERCENT/100))*(1-(pti.GENDISCPERC/100))*(pti.PRICE/(1+(pti.VATPERCENT/100))*(pti.QUANT/1000.0)) AS 'LineTotalNet'\n\t\t--ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000)),2) AS 'LineTotalNet'\n\n\t    ,null AS 'LineTotalNet_USD'\n\t\t,ROUND((pti.IPRICEADISCOUNTBVAT*(pti.QUANT/1000.0)*(1+(pti.VATPERCENT/100))),2) AS 'LineTotalNetVAT'\n\t\t,null AS 'LineTotalNetVAT_USD'\n\t\t,CONVERT(INT, LEFT(CONVERT(VARCHAR, CONVERT(DATETIME, (i.IVDATE + 46283040) / 1440.0), 112), 6)) AS YearMonth\n\t\t,null as 'סטטוס'\n\t\t,null  as 'ChargeFlag'  \n\t\t,null as 'סטטוס ליקוט כותרת'\n\t    ,null  as 'סטטוס ליקוט שורה'\n\t\t,null  as 'דגל סטורנו'\n\t\t\n\t\t,GETDATE() AS RowInsertDatetime\n\n\nfrom [tous].[dbo].POS_TRANSACTIONS pt \nleft join  [tous].[dbo].POS_TRANSACTITEMS pti on pti.TRANSACT=pt.TRANSACT\nleft join [tous].[dbo].PART p on p.PART=pti.PART\n--left join [tous].[dbo].Costs cost on cost.CURDATE=pt.CURDATE and cost.ItemID=pti.PART\nleft join [tous].[dbo].INVOICES i on i.IV=pti.IV\n\t\t\t\nWHERE 1=1 \nAND CONVERT(SMALLDATETIME, (pt.CURDATE + 46283040) / 1440.0) >= DATEADD(yy,DATEDIFF(yy,0,GETDATE())-3,0)\n--and pti.PART <> ''",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE MRR_Prio_Sales",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EntityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "חשבונית",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "חשבונית",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DocName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DocName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "Time",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AgentKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "חבר מועדון",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "חבר מועדון",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LineTotalDiscount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalDiscount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LineTotalDiscountVAT",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalDiscountVAT",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "UnitNetPrice",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UnitNetPrice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "UnitPriceVAT",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UnitPriceVAT",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 26
										},
										"sink": {
											"name": "Quantity",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 26
										}
									},
									{
										"source": {
											"name": "factoryQuantity",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "factoryQuantity",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineTotalCost",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LineTotalCost",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineTotalNet",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalNet",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LineTotalNet_USD",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LineTotalNet_USD",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineTotalNetVAT",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "LineTotalNetVAT",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "LineTotalNetVAT_USD",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LineTotalNetVAT_USD",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "YearMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "YearMonth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "סטטוס",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "סטטוס",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ChargeFlag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ChargeFlag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "סטטוס ליקוט כותרת",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "סטטוס ליקוט כותרת",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "סטטוס ליקוט שורה",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "סטטוס ליקוט שורה",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "דגל סטורנו",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "דגל סטורנו",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RowInsertDatetime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Priority",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[dbo].PART"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "MRR_Prio_Sales"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Sales"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-27T12:53:12Z"
			},
			"dependsOn": []
		}
	]
}